# BUILD LOG

## 2025 WORK THEOREM
- Monday & Friday: Betterment of overall system
- Tues, Wed, Thurs: Client/Feature-specific development

This week:

- Mon:  AISA - Progress pitch. Start planning survey/application. Core automation features (e.g. Scraping)
- Tue: SC - Touch up voting process. Display contents of voting DB with script.
- Wed:  SC - Pretty up UI/UX. Country flags.
- Thu: SC - Look into remote server deployment (e.g. wrapping up Flask on a test server). Update Glynn
- Fri: AISA - Progress pitch deck, draft MVP for accelerator.

Next week:

- Wrap up Song Contest, for now (usable/working demo)
- Turn attention to different features and components
- Truly progress pitch deck and finalise application for Outlier (apply week after)


This month:

- Blueprints for different feature sets (e.g. Songcontest, CMS, messaging, shop, AI features, etc)
- Client: Song Contest. Demo of panel, features, per show voting. Planning of animated scoreboard.
- CMS established to setup/maintain basic sites: ANIMISM, GLOA/Lab, Plan Sea Book
- First mobile UI/UX designed for prototypes
- Consider initial Preferences / Settings
- Preparing groundwork for Outlier application (pitch deck, research papers, forecasts, etc)


-----
## Mon. Jan. 27 2025 ##  3+ hours
- Progressed AISA plan
- Started using DeepSeek instead of ChatGPT
- Initiated draft of AI Super Agency survey/questionnaire, aimed to onboard further test clients
- Comparative research for prospective AISA company jurisdictions, between Singapore, NZ & Thailand

## Tue. Jan. 28 2025 ##  3 hours
- Using DeepSeek, progressed Song Contest voting results system. DeepSeek asked useful questions on unanimous results and ties, that have been forwarded to the client
- While waiting for client's answers, searched and found new country flags to use, resizing .png accordingly
- Updated various code for the views and templates

## Wed. Jan. 29 2025 ## 2.5 hours
- Set up voting results, updating views.py with functions, template & route. It's starting to work
- "Server is busy" issues with DeepSeek, that has otherwise been more useful than ChatGPT. Stalled progress
- Tried reverting to ChatGPT, but am cautious about its past trend in breaking working code
- Eventually, DeepSeek worked again, and we were co-able to pinpoint remaining issues. Vote display success.
- Noted in a lower-table tie, that the higher-ranked country had less 1st place votes (reconsider this)

Tomorrow: 

Thu: Polish up UI/UX, attempt original "script", present to Glynn (screenshare video)
Fri: Survey / Waiting list form? Consider how-to app deployment on 3rd party servers, company-hosted servers (e.g. MD), etc


-----
## Mon. Jan. 20 2025 ##  2+ hours
- Progressed AISA plan & pitch deck, looking towards Outlier post-web accelerator
- Researched AI-based web crawlers for research and reports

## Tue. Jan. 21 2025 ##  3+ hours
- Another wasted day, running in circles with ChatGPT unable to solve the issue
- Now finding this method is detrimental and too time consuming / inaccurate, slowing down progress
- Removed "Add Country to Show" function, as this was causing ongoing issues, and wasn't working

## Wed. Jan. 22 2025 ##  3.5+ hours
- Reverted to basics, setting up a simple test blueprint: "cms" - to better understand its structure
- With everything working, restored song_contest blueprint, and routes/admin functions working again
- Successfully retrieved lists of Countries and Shows, for song contest
- Correct country image/flag issue, which wouldn't display from /uploads folder (moved to /static/uploads)

## Thu. Jan. 23 2025 ##  2+ hours
- Ran through updated logic for song contest voting process, including javascript upgrades
- Revised SongShowCountries DB table with added showOrder field
- Some deeper consideration and resistance to proceed, including extra Votes table or keeping as is

## Fri. Jan. 24 2025 ##  2.5 hours
- Set up voting views/routes and their templates, attending to each small issue (eg blocks)
- Successfully made vote selections and submitted top 3 votes, thereby updating the database
- Ready to pretty up and wrap most of the project next week

-----
## Fri. Jan. 17 2025 ##  1 hour
- Installed GPT4All and Reasoner model, getting used to it
- Noting slower answers in GPT4All
- Need to reevaluate entire process/project in general, noting we still need to finish Song Contest

## Thu. Jan. 16 2025 ##  2.5 hours
- ChatGPT not working properly today, and very unhelpful / unspecific, then some platform errors
- Wasted hours. Will need to explore or develop our own coding-specific helper. Not interested in Copilot.
- Kept hacking away, then to upload images, and spend another hour-plus not succeeding with image upload

## Wed. Jan. 15 2025 ##  2.5 hours
- Further struggles trying to output HTML links in Admin view to add countries to specific shows
- Troubleshooting managed to directly access SongShowCountries, client feedback that we can take an alternate route for now, and come back to this later

## Tue. Jan. 14 2025 ##  2.5 hours
- Update MySQL tables to accommodate adding countries to a specific show
- Major struggles trying to output HTML links in Admin view to add countries to specific shows

-----
## Fri. Jan. 10 2025 ## 0.5 hours
- Added MySQL table SongShowCountries, for voting
- Unproductive day due to dealing with home burglary issues

## Thu. Jan. 9 2025 ## 2.5 hours
- Set up countries_list for song_contest blueprint, eventually successfully displaying a list of countries/flags
- Added temp navigation for countries and shows

## Wed. Jan. 8 2025 ## 2.5 hours
- Relocated the recent work (multiple files and blueprints), back into the root directory, and old code into OLD
- Fixed 404 errors when trying to display the app homepage/index, and restored the auth routes
- Researched and explored best-practice approaches for centralised vs remote vs hybrid CMS updates, including investigating Satellite servers, IPFS/Filecoin for media assets & permastorage

## Tue. Jan. 7 2025 ##  2.5 hours
- Troubleshooted numerous issues after rebuilding Homebrew, etc
- After much deliberation, successfully imported song_contest blueprint to run in revised modular system
- Song Contest Flask-Admin CRUD now working. Attempted custom admin homepage (to improve later)

## Mon. Jan. 6 2025 ##  3 hours
- Restructured app, separating code from app.py into multiple subdirectories and files, including Blueprints
- Troubleshooted numerous issues related to this
- Flask-Admin successfully working again and connecting to MySQL by end of the session

-----

## Fri. Jan. 3 2025 ##  2 hours
- Set up email forwarders to @superagency.pro
- Set up and reserved @aisuperagency social handles (IG, Twitter, FB, Github, TG Channel)

-----

## HOLIDAYS - 1-2 hours of work to check in and plan. E.g. Thu Jan 2 planning session

-----

## Wed. Dec. 18 2024 ##  2 hours
- Solved 404 Not Found error, because mistakenly had not compiled full app.py code
- Created songShows admin / CRUD
- Explored options for voting system DB tables and form structures
- Conversation about dynamic, animated scoreboard for exciting, close results
- Updated Glynn

## Tue. Dec. 17 2024 ##  2 hours
- Created songCountry CRUD, including working file upload field for Images, altered config.py
- Contemplating best approaches to songShows, grouping participating countries, while tallying votes
- Discussing Risk Management capabilities within Super Agency. Hard/soft risks. High end consultancy

## Mon. Dec. 16 2024 ##  1.5 hours
- Research start to week. Looked into app schema/planning, p2p messaging
- Considered approaches for integration of AI "Receptionist", who then designates tasks / models / etc
- Raised limits of PHP uploads, and imported um.sql / songcont.sql to review old database structures
- Planned productive week ahead - likely final full work week of 2024

This week:
- Tue: Practice non-threaded Flask-Admin element setup. E.g. Countries - admin CRUD, Shows CRUD
- Wed: Frontend view, retrieve countries and logos from database, thereby updating site. 
- Thu: Song Contest: Replicate voting formula from original PHP code. Voting page
- Fri: Pretty up, and present to Glynn


Holidays:
- Play with AI models and functions
- Improve CMS, so it can update basic pages like gloa.live, animism.live (and consider remote updating)
- Prepare to wrap Song Contest work
- Attempt integrating API / AI chatbots


--------
## Fri. Dec. 13 2024 ##  1+ hours
- Referred to Flask & Admin documentation, and crafted list of future features / functionality
- Explored possibilities of Single Page Applications (SPA), React-based notifications, wallet & blockchain integration, and other possible Flask-Admin functionality
- Considering next week's intended development, likely around basic CMS functionality for landing pages

## Thu. Dec. 12 2024 ##  3 hours
- Flask-Admin successfully deployed
- Admin functions for Users: Create, Edit. Hashed passwords on Create and Edit 

## Wed. Dec. 11 2024 ##  1 hour
- Solved Terminal debug logging issue, by changing port to 5001
- User list is now displaying. Now considering more dynamic, repeatable functions - add, edit, list (instead of separate templates or even routes all the time for each)
- Looked into dynamic, modular routes & actions (e.g. not needing 50+ routes for 50+ elements)
- Researched Flask-Admin vs building own admin functions

## Tue. Dec. 10 2024 ##  3.5 hours
- Successfully implemented logout script, and some basic variable changes based on status
- Experienced further issues rendering inner templates when there is database logic / retrieval

## Mon. Dec. 9 2024 ##  2+ hours
- Attempted simpler Login test, to ensure form posted properly, data posting to correct route
- Success of simpler Login test, including subsequent MySQL database user login check
- Copied over results to working app.py script, and login is now successfully working

This week:
- Tue: Logout. Attempt List of users.
- Wed: Fix logging issue so it shows in Terminal. List of users.
- Thu:  Consider Flask-Admin. Edit user details (admin) Create new user (admin view).
- Fri: Admin vs. User role differences, routes, verification? Reset password
--------
## Fri. Dec. 6 2024 ##  4+ hours
- Tried and failed to logon, constantly thwarted by Internal Server Errors, and debug wasn't printing
- Another wholly unsuccessful Friday

## Thu. Dec. 5 2024 ##  0.5 hours
- Commenced deeper reading of login/authentication in Python/Flask, and possible implementations
- Progress thwarted due to issues related to local thieves (neighbours meetings, police visit, etc)
- Tomorrow: Login to system

## Wed. Dec. 4 2024 ##  3.5 hours
- Crafted desktop shortcut to launch python/php/mysql servers, and open app/phpmyadmin in browser
- Successfully established a test MySQL database connection, retrieving test data from a DB table
- Set up remote Github repo updates, and daily GitHub update script, to keep profile fully active

## Tue. Dec. 3 2024 ## 2+ hours
- Despite numerous further issues, successfully installed & deployed phpymyadmin on localhost

## Fri. Nov. 29 2024 ## 5+ hours
- Frustratingly, most of a waste of a day, reminding why I detest programming and have tried to quit
- Attempted to enact SQLite DB, & installed DB Browser for SQLite
- DB Browser limitations (e.g. no pwd encryption) forced pivot to more-familiar MySQL/PHPMyAdmin
- Spent 2+ hours trying and failing to reset MySQL root password, reinstall, and load phpmyadmin
- Split up app.py into multiple files and routes, with inconsistent success/failure. Not sure it worked
- Many blank screens, server restarts, unsuccessful data prints, etc
- Day was a failure. Did not accomplish simple login mission.
- Reminder that my role is to develop the MVP. Any further funding would onboard the Dev/s we need.

## Thu. Nov. 28 2024 ## 3+ hours
- Set up Skeleton as main layout/css framework
- Created individual templates for Home, Login - using Jinja template inheritance
- Explored scalable extendibility for more complex, multi-module Python apps
- Researched best-practice pages and content for optimal pitch deck
- Note that was stuck on various 404 display errors for around an hour, until resolved (redundant code)

## Wed. Nov. 27 2024 ## 2 hours
- Researched python vs php frameworks
- Settled on and installed Flask for AI-related development
- Aim to integrate Skeleton as CSS/layout with Flask
- First test pages / app on Flask


## Mon. Nov. 25 2024 ## 1.5 hours
- Registered superagency.pro as primary domain
- Set up DNS/hosting, and activated on Cloudstick

// back from Bangkok, following 2+ weeks of networking & research
// Noting that none of the world in September/October seems to have been logged

## Thu. Aug 8 2024 - c.2 hours
- Researched Models and more, in the HF documentation
- Initiated a document about Page Builder / Self-Help app, plotting out schematics for a CMS
- Researched VULTR server specs required to deploy AI-based applications

Problem: Cost-prohibitive, high-spec GPU/RAM machines required to deploy and dev applications


## Wed. Aug 7 2024 - c.4 hours
- Successfully set up API access to update page on VULTR server
- Successfully installed Hugging Face / API library for AI text generation, and updating the page.

Problem: Model did not follow the prompt instructions, specifically to change the tour dates. It DID follow the instructions to replace all existing text with a message, but then auto-generated its own text at the bottom

Solutions:
- Simpler exercises to start
- Replacing clearly-indicated areas, such as JSON fields or input areas
- Might not need AI at this point, to generate a CMS-updating script